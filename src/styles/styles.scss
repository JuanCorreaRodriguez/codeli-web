//@use "../../node_modules/@angular/material/index" as mat;
@use '../../node_modules/@angular/material/index' as mat;

@include mat.core();


$angular-blue: mat.define-palette(mat.$purple-palette, 300);
$angular-red: mat.define-palette(mat.$red-palette, 700);
$myAppTheme: mat.define-dark-theme((
  color: (
    primary: $angular-blue,
    accent: $angular-blue,
    warn: $angular-red,
  ),));
@include mat.all-component-colors($myAppTheme);
.mat-mdc-menu-panel {
  min-width: 180px !important;
  max-width: max-content !important;
  width: max-content !important;
  border-radius: var(--globalRadius) !important;
  padding: 0.25em !important;
  background: var(--globalBg) !important;
  box-shadow: 0 0 12px var(--shadow) !important;

  .mat-mdc-menu-item {
    display: flex;
    position: relative;
    align-items: center;
    justify-content: flex-start;
    overflow: hidden;
    padding: 0 16px 0 0;
    width: 100%;
    margin: 0 auto !important;
    min-height: max-content;
  }

  .mat-mdc-menu-content {
    border-radius: 1em !important;
    padding: 0 !important;
    background-color: var(--globalBgBlur2) !important;
  }
}

.mat-mdc-menu-panel .mat-mdc-menu-content button {
  display: flex !important;
  align-items: center;
  gap: 0.45em !important;
  border-radius: .5em;
  margin-top: .5rem;
  padding: 0.25em 0.5em !important;
}

.mat-mdc-menu-panel .mat-mdc-menu-content button p {
  font-family: var(--globalTextFamily), sans-serif !important;
  font-size: 12px !important;
}

.mat-icon {
  color: var(--colorIcons);
}

.floor_bg {
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  position: absolute;
  z-index: -1;
  opacity: var(--opacityFloor);
}

.mat-mdc-button > .mat-icon {
  margin: 0 !important;
  width: 26px !important;
  height: 26px !important;
  display: flex !important;
  align-items: center;
  justify-content: center;
}

.blueButton {
  background: linear-gradient(to left, var(--primary), var(--accent)) !important;
  background: transparent;
  border-radius: var(--globalRadius) !important;
  padding: 0.5em 1.5em !important;
  max-height: 2rem !important;
  min-height: 2rem !important;
  font-weight: 500 !important;
  transition: all 0.5s;

  h2, p {
    color: white !important;
    font-weight: 500 !important;
    font-size: 12px !important;
  }
}

.clearButton {
  border-radius: .5rem !important;
  padding: 0.5em 1.5em !important;
  max-height: 2rem !important;
  min-height: 2rem !important;
  font-weight: 500 !important;
  display: flex;
  align-items: center;
  justify-content: center;
  background: transparent !important;
  //border: 1px solid var(--primary) !important;
  h2 {
    color: var(--colorBW) !important;
    font-weight: 500 !important;
  }
}

.blueButton, .clearButton {
  span {
    color: white !important;
  }

  h2, p {
    font-weight: 500 !important;
    font-size: 12px !important;
    font-family: var(--globalTextFamily), sans-serif !important;
  }
}

.mat-mdc-text-field {
  min-height: 25px !important;
  color: var(--colorBW) !important;
  font-weight: 500 !important;
}

.mat-mdc-text-field-wrapper {
  border-radius: 0.5em !important;
  background: var(--globalField2) !important;
  font-family: var(--globalTextFamily), sans-serif !important;
  font-weight: 500 !important;
}

.mat-mdc-form-field-flex {
  align-items: center !important;
}

.mat-mdc-text-field-wrapper .mat-mdc-form-field-infix .mat-mdc-floating-label {
  font-size: 11px !important;
  font-family: var(--globalTextFamily), sans-serif !important;
  font-weight: 500 !important
}

.mat-mdc-text-field-wrapper:not(.mdc-text-field--outlined) .mat-mdc-form-field-infix {
  padding-top: 0 !important;
  padding-bottom: 0 !important;
}

.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-line-ripple::before {
  border-bottom: none;
}

.mat-mdc-form-field-focus-overlay {
  background-color: transparent !important;
}

.mdc-text-field {
  padding: 0 8px !important;
}

.mdc-text-field__input {
  font-size: 12px !important;
  font-family: var(--globalTextFamily), sans-serif !important;
  font-weight: 500 !important;
  color: var(--colorBW) !important;
}

.mat-mdc-form-field-error {
  min-height: 2rem !important;
  font-family: var(--InterTight), sans-serif !important;
}

.mat-mdc-button .mdc-button__label h2 {
  font-size: 14px !important;
  font-weight: 500 !important;
  font-family: var(--globalTextFamily), sans-serif !important;
}

.maskText {
  position: absolute;
  top: 0;
  left: 100%;
  width: 200%;
  height: 100%;
  max-width: none;
  background-image: linear-gradient(to right, transparent, var(--globalBg) 50%, var(--globalBg));
}

.worldRoute {
  position: absolute;
  object-fit: contain;
  top: 50%;
  left: 50%;
  z-index: -1;
  transform: translate(-50%, -50%);
  opacity: var(--opacityHead);
}

.ann_cont {
  border-radius: var(--globalRadius);
  padding: 0 1rem !important;
  display: flex;
  justify-content: center;
  align-items: center;
  margin-bottom: 1rem;
  gap: .45rem;
  width: max-content;
}

$bg: #f3f8fa;
$white: #fff;
$black: var(--primary);
@mixin transition($property: all, $duration: 0.45s, $ease: cubic-bezier(0.65,0,.076,1)) {
  transition: $property $duration $ease;
}

.animBtn {
  position: relative;
  display: inline-block;
  cursor: pointer;
  border: 0;
  background: transparent;
  padding: 0;

  &.learn-more {
    width: 9.5rem;
    height: auto;

    .circle {
      @include transition(all, 0.45s, cubic-bezier(0.65, 0, .076, 1));
      position: relative;
      display: block;
      margin: 0;
      width: 1.85rem;
      height: 1.85rem;
      background: $black;
      border-radius: 1.625rem;

      .icon {
        @include transition(all, 0.45s, cubic-bezier(0.65, 0, .076, 1));
        position: absolute;
        font-size: 8px !important;
        top: 50%;
        bottom: 50%;
        transform: translate(-50%, -50%);
        background: transparent;

        &.arrow {
          @include transition(all, 0.45s, cubic-bezier(0.65, 0, .076, 1));
          left: .85rem;
          width: .001rem;
          height: 0.001rem;
          background: none;

          &::before {
            position: absolute;
            content: '';
            top: 50%;
            right: 0.0625rem;
            width: 0.5rem;
            height: 0.5rem;
            border-top: 0.125rem solid #fff;
            border-right: 0.125rem solid #fff;
            transform: rotate(45deg) translateY(-65%);
          }
        }
      }
    }

    .button-text {
      @include transition(all, 0.45s, cubic-bezier(0.65, 0, .076, 1));
      position: absolute;
      top: 50%;
      left: 0;
      right: 0;
      bottom: 0;
      transform: translateY(-50%);
      font-weight: 500 !important;
      margin: 0 0 0 .85rem;
      color: $black;
      text-align: center;
    }
  }

  &:hover {
    .circle {
      width: 100%;

      .icon {
        &.arrow {
          background: $white;
          transform: translate(.5rem, 0);
        }
      }
    }

    .button-text {
      color: $white;
    }
  }
}

.centerFlexItems {
  display: flex !important;
  align-items: center !important;
  justify-content: center !important;
  box-sizing: border-box !important;
}

.headerRouteImg {
  grid-area: headerRouteImg;
  position: relative;
  max-width: 100vw !important;
  transform: scale(1.25) !important;
  filter: drop-shadow(2px 4px 6px black) !important;
  object-fit: cover;
  object-position: 0 0;
}

.headerRouteDat {
  grid-area: headerRouteDat
}

.headerDataRoute {
  width: 100vw;
  height: 100vh;
  margin: auto !important;
  display: grid;
  position: relative;
  padding: 1rem !important;
  box-sizing: border-box;
  align-items: center;
  grid-template-areas: "headerRouteDat headerRouteImg";

  .ann_cont_Route {
    background: var(--msgOrange);
    border-radius: var(--globalRadius);
    padding: .5rem 1rem !important;
    display: flex;
    justify-content: center;
    align-items: center;
    margin-bottom: 1rem;
    width: max-content;
  }

  .header_h1_Route {
    font-size: 16px !important;
  }

  .header_h1_Route {
    font-weight: 700 !important;
    font-size: 16px !important;
  }

  .header_h2_Route {
    font-size: 38px !important;
    font-weight: 700 !important;
    width: 90% !important;
    color: var(--colorText) !important;

    span {
      font-size: 38px !important;
      font-weight: 700 !important;
    }
  }

  .header_p_Route {
    width: 100%;
  }
}

.cursor-dot {
  width: 10px;
  height: 10px;
  background-color: var(--primary);
  border-radius: 50%;
  position: fixed;
  top: 0;
  left: 0;
  transform: translate(-50%, -50%);
  z-index: 9999;
  pointer-events: none;
}

.__introduceCont {
  width: 100vw;
  margin: 10rem auto 0 auto;
}

.introTitles {
  width: max-content;
  text-align: center;
  margin: 0 auto !important;
  font-weight: 700 !important;
  font-size: 7rem !important;
}

.introDesc {
  width: 45vw;
  text-align: center;
  margin: 0 auto !important;
}

.mat-mdc-snack-bar-container .mdc-snackbar__surface {
  background: var(--globalBox) !important;
  border-radius: var(--globalRadius) !important;
}

.mat-mdc-snack-bar-container .mdc-snackbar__label {
  color: var(--colorBW) !important
}

@media (max-width: 767px) {
  .__introduceCont {
    margin: 0 auto;
  }
  .introTitles {
    font-size: 38px !important
  }
  .introDesc {
    width: 80vw;
  }
}

@media(max-width: 767px) {
  .headerRouteImg {
    height: 60vh;
    margin: 0 auto !important;
  }
  .headerRouteDat {
    width: 80vw !important;
    min-width: 80vw !important;
    height: 50vh
  }
  .headerDataRoute {
    padding: .35rem !important;
    grid-template-areas:
      "headerRouteImg"
      "headerRouteDat";

    .ann_cont_Route {
      padding: .35rem .85rem !important;
      margin-bottom: 1rem;
    }

    .header_h1_Route {
      font-size: 12px !important;
    }

    .header_h1_Route {
      font-size: 14px !important;
    }

    .header_h2_Route {
      font-size: 24px !important;

      span {
        font-size: 24px !important;
      }
    }

    .header_p_Route {
      width: 80%;
    }
  }
}

@media (max-width: 760px) {
  .headerDataRoute {
    width: 96vw;
    max-width: 96vw;

    .header_h1_Route {
      font: 700 18px/24px var(--globalTextFamily) !important;
    }

    .header_h2_Route {
      font-size: 28px !important;
      flex-wrap: wrap;

      span {
        font-size: 28px !important;
      }
    }

    .header_p_Route {
      width: 90%;
    }
  }
}

@media (max-width: 760px) {
  //.globalCounters{
  //  .counters{
  //    display: flex;
  //    gap: 1rem;
  //    flex-wrap: wrap;
  //    background: rgba(162, 89, 255, 0.35);
  //    border-radius: calc(var(--globalRadius) * 2) !important;
  //    .counter{
  //      width: 30vw;
  //      h2{
  //        color: #A259FF !important;
  //      }
  //      p{
  //        color: var(--colorText) !important;
  //        font-weight: 500 !important;
  //      }
  //    }
  //  }
  //}
  h1 {
    font-size: 12px !important;
  }
  h2 {
    font-size: 18px !important;
  }
  h3 {
    font-size: 16px !important;
  }
  h4 {
    font-size: 14px !important;
  }
  p {
    font-size: 12px !important;
  }
  .blueButton {
    padding: 0.5em .85em !important;
    border-radius: .35rem !important;
    max-height: 1.75rem !important;
    min-height: 1.75rem !important;
    transition: all 0.5s;
    cursor: pointer;

    .mdc-button__label, span {
      h2 {
        font-size: 10px !important;
      }
    }

    h2, p {
      font-size: 10px !important;
    }
  }
  blueButton h2:after {
    content: '»';
    position: absolute;
    opacity: 0;
    top: 14px;
    right: -20px;
    transition: 0.5s;
  }

  .blueButton:hover {
    padding-right: 24px;
    padding-left: 8px;
  }
  .blueButton, .clearButton {
    h2, p {
      font-size: 10px !important;
    }
  }

  blueButton:hover:after {
    opacity: 1;
    right: 10px;
  }
  .clearButton {
    border-radius: .5rem !important;
    padding: 0.5em 1.5em !important;
    font: 400 10px/24px var(--globalTextFamily) !important;
    color: var(--colorText) !important;
  }
  .mat-mdc-button .mdc-button__label h2 {
    font-size: 10px !important;
  }

  .ann_cont {
    padding: 0 .5rem !important;
    margin-bottom: 0;
  }


}
